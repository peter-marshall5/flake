(defwidget launcher []
	(box :orientation "h" 
		 :space-evenly "false" 
  	(button :class "launcher_icon" 
		   	:onclick "scripts/popup launcher"  "")))

(defwidget workspaces []
  (box :class "works"
       :orientation "h"
       :space-evenly true
       :spacing 0
    (button :onclick "swaymsg workspace 1" :class "icon" "")
    (button :onclick "swaymsg workspace 2" :class "icon" "")
    (button :onclick "swaymsg workspace 3" :class "icon" "")
    (button :onclick "swaymsg workspace 4" :class "icon" "")
    (button :onclick "swaymsg workspace 5" "○")
    (button :onclick "swaymsg workspace 6" "○")
    (button :onclick "swaymsg workspace 7" "○")
    (button :onclick "swaymsg workspace 8" "○")
    (button :onclick "swaymsg workspace 9" "○")
    (button :onclick "swaymsg workspace 10" "○")))

(defwidget volum []
	(eventbox :onhover "eww update volum=true" 		
			  :onhoverlost "eww update volum=false"
	(box      :orientation "h" 	  
			  :space-evenly "false" 
			  :spacing "2"
	(revealer :transition "slideleft" 
			  :reveal volum         
			  :duration "550ms"
	(scale    :class "volbar" 	  
			  :value current-volume  
			  :tooltip "Volume: ${current-volume}%" 
			  :max 101 
			  :min 0 
			  :onchange "wpctl set-volume @DEFAULT_SINK@ {}%" ))
	(button   :onclick "scripts/popup audio"   :class "volume-icon" ""))))
(defpoll current-volume :interval "1s" "wpctl get-volume @DEFAULT_SINK@ | awk -F' ' '{ print $2 }' | tr -d '.'")
(defvar volum false)

(defwidget bat []
	(box	:orientation "h"	
			:space-evenly "false"
	(label	:class "bat"		
			:text battery	
			:tooltip "Battery: ${battery-cappacity}%")))
(defpoll battery			:interval "1s"	"scripts/battery icon")
(defpoll battery-cappacity	:interval "1s"	"scripts/battery percent")

(defwidget wifi []
	(box		:orientation "h"  
				:tooltip wifi-name
	(button		:onclick "scripts/popup wifi" 
				:class "wifi-icon" wifi-icon)))
(defpoll wifi-icon :interval "1s" "scripts/wifi icon")
(defpoll wifi-name :interval "1s" "scripts/wifi name")

(defwidget bright []
  (eventbox :onhover "eww update bright=true"   
  			:onhoverlost "eww update bright=false"
  			(box    :orientation "h"  
			  		:space-evenly "false"  
					:spacing 2
  			(revealer :transition "slideleft" 
			  		  :reveal bright   
					  :duration "550ms"
  			(scale :class "bribar" 
			  	   :value current-brightness 
				   :tooltip "Brightness: ${current-brightness}%" 
				   :onchange "brightnessctl set {}%"  
				   :max 101 
				   :min 0))
  			(label :class "brightness-icon" 
			  	   :text ""))))
(defpoll current-brightness :interval "1s" "brillo")
(defvar bright false)

(defwidget time []
	(box	:orientation "h" 
			:class "time" 
	(button	:onclick "scripts/popup calendar"	
			timepoll)))
(defpoll timepoll	:interval "1s"	"date '+%H:%M'")

(defwidget cal []
	(box :class "cal-box" 
		 :orientation "v"
	(box :class "cal-inner-box"
	(calendar :class "cal" 
			  :day calendar_day 
			  :month calendar_month 
			  :year calendar_year))))
(defpoll calendar_day :interval "10h"
    "date '+%d'")
(defpoll calendar_month :interval "10h"
    "scripts/calendar")
(defpoll calendar_year :interval "10h"
    "date '+%Y'")

(defwidget power []
	(box  :orientation "h"
			:space-evenly false
			:class "powermenu"
	(button		:class "button-off"					
				:tooltip "Shutdown"		 
				:onclick "scripts/popup power"	"")))
(defvar power false)

(defwidget powermenu []
	(box		:orientation "h"					
				:space-evenly "false"
				:class "powermenu-popup"

	(button		:class "button-reb"					
  			:tooltip "Reboot"		 
				:onclick "reboot"	"")

	(button		:class "button-quit" 				
				:tooltip "Logout" 		 
				:onclick "systemctl --user stop sway" "")

	(button		:class "button-off"					
				:tooltip "Shutdown"		 
				:onclick "shutdown now"	"")))

(defwidget control []
	(box :orientation "h" 
		 :space-evenly false  
		 :class "control"
(bat)
(wifi)
(bright)
(volum)))

(defwidget bottom []
	(box	:orientation "h" 
			:space-evenly false 
			:class "bottom"
(time)
(power)))

(defwidget top []
	(box	:orientation "h" 
			:space-evenly "false" 
			:halign "start"
		 :spacing 5 
(launcher)
(workspaces :screen "DP-1")))

(defwidget end []
	(box :orientation "h" 
		 :space-evenly "false" 
		 :halign "end" 
		 :spacing 5
(control)
(bottom)))

(defwidget bar []
	(box :class "eww_bar" 
		 :orientation "h" 
		 :vexpand "false" 
		 :hexpand "false"
(top)
(end)))

(defwindow bar
	:geometry (geometry :x "0%" 
						:y "0%" 
						:height "47px" 
						:width "100%"
            :anchor "bottom center")
  :monitor 0
  :exclusive true
(bar))

(defwindow calendar
	:geometry (geometry :x "6px" 
						:y "6px" 
						:width "270px" 
						:height "60px"
						:anchor "bottom right")
	:monitor 0
(cal))

(defwindow power
	:geometry (geometry :x "0%"
						:y "0%"
						:width "0"
						:height "0"
						:anchor "center")
	:monitor 0
(powermenu))
